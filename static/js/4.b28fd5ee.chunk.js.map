{"version":3,"sources":["views/Cast/Cast.module.css","views/Reviews/Reviews.js","views/Cast/Cast.js","views/MovieDetailsPage/MovieDetailsPage.module.css","views/MovieDetailsPage/MovieDetailsPage.js"],"names":["module","exports","Reviews","useState","reviews","setreviews","movieId","useParams","useEffect","API","then","rev","total_results","results","map","author","content","id","Cast","artist","setartist","artistInfo","className","s","castList","cast","img","src","profile_path","alt","name","character","cast_id","MovieDetailsPage","searchMovies","setsearchMovies","params","console","log","march","useRouteMatch","location","useLocation","history","useHistory","movieInfo","type","onClick","push","state","from","MovieInfo","poster_path","title","width","info","original_title","vote_average","overview","genres","genre","gen","link","to","url","path"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,IAAM,kBAAkB,SAAW,yB,gICGtC,SAASC,IACtB,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QAQR,OANAE,qBAAU,WACRC,IAAIL,QAAQE,GAASI,MAAK,SAACC,GACzBN,EAAWM,QAEZ,CAACL,IAGFF,IAC2B,IAA1BA,EAAQQ,cACP,2CAEA,6BACGR,EAAQS,QAAQC,KAAI,SAACH,GAAD,OACnB,+BACE,6BAAKA,EAAII,SACT,4BAAIJ,EAAIK,YAFDL,EAAIM,Y,iJChBR,SAASC,IACtB,MAA4Bf,mBAAS,MAArC,mBAAOgB,EAAP,KAAeC,EAAf,KACQd,EAAYC,cAAZD,QAMR,OAJAE,qBAAU,WACRC,IAAIY,WAAWf,GAASI,MAAK,SAACS,GAAD,OAAYC,EAAUD,QAClD,CAACb,IAGFa,GACE,oBAAIG,UAAWC,IAAEC,SAAjB,SACGL,EAAOM,KAAKX,KAAI,SAACK,GAAD,OACf,+BACE,qBACEG,UAAWC,IAAEG,IACbC,IAAG,yCAAoCR,EAAOS,cAC9CC,IAAI,KAEN,4BAAIV,EAAOW,OACX,2CAAcX,EAAOY,eAPdZ,EAAOa,gB,mBChB1BhC,EAAOC,QAAU,CAAC,UAAY,oCAAoC,KAAO,+BAA+B,OAAS,iCAAiC,IAAM,8BAA8B,KAAO,iC,wHCuE9KgC,UA9DU,WACvB,MAAwC9B,mBAAS,MAAjD,mBAAO+B,EAAP,KAAqBC,EAArB,KACMC,EAAS7B,cACf8B,QAAQC,IAAIF,EAAQ,UACpB,IAAMG,EAAQC,cACdH,QAAQC,IAAIC,EAAO,SACnB,IAAME,EAAWC,cACXC,EAAUC,cAShB,OAHApC,qBAAU,WACRC,IAAIoC,UAAUT,EAAO9B,SAASI,KAAKyB,KAClC,CAACC,IAEFF,GACE,qCACE,wBAAQY,KAAK,SAASC,QAVX,WAAO,IAAD,IACrBJ,EAAQK,KAAR,iBAAaP,QAAb,IAAaA,GAAb,UAAaA,EAAUQ,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MASlC,uBACA,gCACE,sBAAK5B,UAAWC,IAAE4B,UAAlB,UACE,qBACExB,IAAG,yCAAoCO,EAAakB,aACpDvB,IAAKK,EAAamB,MAClBC,MAAM,UAER,sBAAKhC,UAAWC,IAAEgC,KAAlB,UACE,6BAAKrB,EAAasB,gBAAkBtB,EAAaJ,OACjD,6CAA4C,GAA5BI,EAAauB,aAA7B,QACA,0CACA,4BAAIvB,EAAawB,WACjB,wCACA,oBAAIpC,UAAWC,IAAEoC,OAAjB,SACGzB,EAAayB,OAAO7C,KAAI,SAAC8C,GAAD,OACvB,oBAAItC,UAAWC,IAAEsC,IAAjB,SACGD,EAAM9B,MADkB8B,EAAM3C,eAOzC,uBACA,wDACA,cAAC,IAAD,CAASK,UAAWC,IAAEuC,KAAMC,GAAE,UAAKxB,EAAMyB,IAAX,SAA9B,SACE,uCAEF,cAAC,IAAD,CAAS1C,UAAWC,IAAEuC,KAAMC,GAAE,UAAKxB,EAAMyB,IAAX,YAA9B,qBAGA,cAAC,IAAD,CAAOC,KAAK,wBAAZ,SACE,cAAC,UAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,2BAAZ,SACE,cAAC,UAAD","file":"static/js/4.b28fd5ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Cast_img__ZQxeh\",\"castList\":\"Cast_castList__2xuxE\"};","import API from \"../../service/service\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nexport default function Reviews() {\r\n  const [reviews, setreviews] = useState(null);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    API.reviews(movieId).then((rev) => {\r\n      setreviews(rev);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    reviews &&\r\n    (reviews.total_results === 0 ? (\r\n      <p>No reviews</p>\r\n    ) : (\r\n      <ul>\r\n        {reviews.results.map((rev) => (\r\n          <li key={rev.id}>\r\n            <h3>{rev.author}</h3>\r\n            <p>{rev.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    ))\r\n  );\r\n}\r\n","import { useParams } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport API from \"../../service/service\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport s from \"./Cast.module.css\";\r\nexport default function Cast() {\r\n  const [artist, setartist] = useState(null);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    API.artistInfo(movieId).then((artist) => setartist(artist));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    artist && (\r\n      <ul className={s.castList}>\r\n        {artist.cast.map((artist) => (\r\n          <li key={artist.cast_id}>\r\n            <img\r\n              className={s.img}\r\n              src={`https://image.tmdb.org/t/p/w500${artist.profile_path}`}\r\n              alt=\"\"\r\n            />\r\n            <p>{artist.name}</p>\r\n            <p>character:{artist.character}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n    // <p>lfllfaf</p>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieInfo\":\"MovieDetailsPage_MovieInfo__3CVIA\",\"info\":\"MovieDetailsPage_info__3TK1V\",\"genres\":\"MovieDetailsPage_genres__1DyHz\",\"gen\":\"MovieDetailsPage_gen__2dKzC\",\"link\":\"MovieDetailsPage_link__3AKIQ\"};","import { useState, useEffect } from \"react\";\r\nimport { Route, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../service/service\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport Cast from \"../Cast/Cast\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport s from \"./MovieDetailsPage.module.css\";\r\n\r\nimport { useLocation, useHistory } from \"react-router\";\r\n\r\nconst MovieDetailsPage = () => {\r\n  const [searchMovies, setsearchMovies] = useState(null);\r\n  const params = useParams();\r\n  console.log(params, \"params\");\r\n  const march = useRouteMatch();\r\n  console.log(march, \"march\");\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const goGoBack = () => {\r\n    history.push(location?.state?.from ?? \"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.movieInfo(params.movieId).then(setsearchMovies);\r\n  }, [params]);\r\n  return (\r\n    searchMovies && (\r\n      <>\r\n        <button type=\"button\" onClick={goGoBack}>{`<-Go back`}</button>\r\n        <div>\r\n          <div className={s.MovieInfo}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w200${searchMovies.poster_path}`}\r\n              alt={searchMovies.title}\r\n              width=\"200px\"\r\n            />\r\n            <div className={s.info}>\r\n              <h2>{searchMovies.original_title || searchMovies.name}</h2>\r\n              <p> User score {searchMovies.vote_average * 10} %</p>\r\n              <h3>Overview</h3>\r\n              <p>{searchMovies.overview}</p>\r\n              <h3>Genres</h3>\r\n              <ul className={s.genres}>\r\n                {searchMovies.genres.map((genre) => (\r\n                  <li className={s.gen} key={genre.id}>\r\n                    {genre.name}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <h3>Additional information</h3>\r\n          <NavLink className={s.link} to={`${march.url}/cast`}>\r\n            <p>Cast</p>\r\n          </NavLink>\r\n          <NavLink className={s.link} to={`${march.url}/reviews`}>\r\n            Reviews\r\n          </NavLink>\r\n          <Route path=\"/movies/:movieId/cast\">\r\n            <Cast />\r\n          </Route>\r\n          <Route path=\"/movies/:movieId/reviews\">\r\n            <Reviews />\r\n          </Route>\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}