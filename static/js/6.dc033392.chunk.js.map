{"version":3,"sources":["views/Reviews/Reviews.js"],"names":["Reviews","useState","reviews","setreviews","movieId","useParams","useEffect","API","then","rev","total_results","results","map","author","content","id"],"mappings":"iOAIe,SAASA,IACtB,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QAQR,OANAE,qBAAU,WACRC,IAAIL,QAAQE,GAASI,MAAK,SAACC,GACzBN,EAAWM,QAEZ,CAACL,IAGFF,IAC2B,IAA1BA,EAAQQ,cACP,2CAEA,6BACGR,EAAQS,QAAQC,KAAI,SAACH,GAAD,OACnB,+BACE,6BAAKA,EAAII,SACT,4BAAIJ,EAAIK,YAFDL,EAAIM","file":"static/js/6.dc033392.chunk.js","sourcesContent":["import API from \"../../service/service\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\nexport default function Reviews() {\r\n  const [reviews, setreviews] = useState(null);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    API.reviews(movieId).then((rev) => {\r\n      setreviews(rev);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    reviews &&\r\n    (reviews.total_results === 0 ? (\r\n      <p>No reviews</p>\r\n    ) : (\r\n      <ul>\r\n        {reviews.results.map((rev) => (\r\n          <li key={rev.id}>\r\n            <h3>{rev.author}</h3>\r\n            <p>{rev.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    ))\r\n  );\r\n}\r\n"],"sourceRoot":""}